#!/bin/bash

IP_ADDRESSES=($(hostname -I))
START_PORT=20000

install_xray() {
    command -v unzip >/dev/null || { apt-get install unzip -y || yum install unzip -y; }
    wget -q https://github.com/XTLS/Xray-core/releases/download/v1.8.3/Xray-linux-64.zip
    unzip -q Xray-linux-64.zip
    mv xray /usr/local/bin/xrayL
    chmod +x /usr/local/bin/xrayL

    cat <<EOF >/etc/systemd/system/xrayL.service
[Unit]
Description=XrayL Service
After=network.target

[Service]
ExecStart=/usr/local/bin/xrayL -c /etc/xrayL/config.toml
Restart=on-failure
User=nobody

[Install]
WantedBy=multi-user.target
EOF

    systemctl daemon-reload
    systemctl enable --now xrayL.service
}

config_xray() {
    mkdir -p /etc/xrayL
    config_content=""

    for ((i = 0; i < ${#IP_ADDRESSES[@]}; i++)); do
        ip=${IP_ADDRESSES[i]}
        port=$((START_PORT + i))
        tag="tag_$((i + 1))"

        config_content+=$(cat <<EOF
[[inbounds]]
port = $port
protocol = "socks"
tag = "$tag"
[inbounds.settings]
auth = "noauth"
udp = true
ip = "$ip"
[[outbounds]]
sendThrough = "$ip"
protocol = "freedom"
tag = "$tag"
[[routing.rules]]
type = "field"
inboundTag = "$tag"
outboundTag = "$tag"

EOF
)
    done

    echo "$config_content" > /etc/xrayL/config.toml
    systemctl restart xrayL.service
}

main() {
    [ -x /usr/local/bin/xrayL ] || install_xray
    config_xray
}

main
